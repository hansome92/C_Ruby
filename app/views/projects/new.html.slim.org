- @title = t('.titles.site')

.new-project-page[class="category-#{resource.category.to_s.parameterize}"]

  ol.joyride-list[data-joyride]
    li data-id="joyride-start" data-text=t('.joyride.next') data-options='tipLocation: right; tip_animation: fade;'
      h5 = t('.joyride.start.title')
      p = t('.joyride.start.description')

    - joyride = [{id: 'project_category_id',            name: :category},
                 {id: 'project_name',                   name: :name},
                 {id: 'project_campaign_type',          name: :campaign_type},
                 {id: 'project_goal',                   name: :goal},
                 {id: 'project_address',                name: :address},
                 {id: 'project_headline',               name: :headline},
                 {id: 'project_about',                  name: :about},
                 {id: 'project_organization_type',      name: :organization_type}]

    - for joy in joyride
      li data-id=joy[:id] data-text=t('.joyride.next')
        h5 = t(".joyride.#{joy[:name]}.title")
        p = t(".joyride.#{joy[:name]}.description").html_safe

  .row
    .large-6.columns.large-centered
      .new-project-box
        header#joyride-start
          h3 = t('.titles.header')
          p = t('.titles.sub')
          hr
        .row
          .large-10.small-11.columns.large-centered.small-centered
            = simple_form_for @project do |f|
              = f.input :category_id, collection: Category.array, selected: @project.category_id, include_blank: false, required: true
              = f.input :name, as: :string, maxlength: 100
              = f.label :campaign_type
              = f.select :campaign_type, [['All or None', 'all_or_none'],['Every Dollar Counts', 'flexible']]

              .input[class="#{'error' if @project.errors[:goal].present?}"]
                .row.collapse
                  = f.label :goal
                  .large-1.small-2.columns
                    span.prefix $
                  .large-10.small-8.columns
                    = f.number_field :goal, class: 'with-prefix with-postfix'
                  .large-1.small-2.columns
                    span.postfix .00
                -  if @project.errors[:goal].present?
                  small.error = @project.errors[:goal].to_sentence

              = f.input :street_address
              .address.address-coordinates.pin-img[data-longitude=@project.longitude data-latitude=@project.latitude data-image-url=image_url('pin.png')]
                = f.input :address, input_html: { class: 'search-cities-with-google', autocomplete: :off }
                .map-canvas

              = f.input :headline, as: :string, maxlength: 140
              = f.input :about
              = f.input :organization_type, as: :select, collection: Project.organization_type_array, include_blank: false, required: true

              p.terms = t('.accept_terms_html', link: link_to(t('words.terms'), terms_path, target: :blank))
              = f.button :submit
