- collection.rank(:row_order).each do |reward|
  div[id="reward-#{reward.id}" data-update-path=sort_project_reward_path(parent, reward) data-new-project-contribution-path=new_project_contribution_path(parent, reward_id: reward.id) class="reward #{ 'clickable' if parent.online? && !reward.sold_out? && !reward.soon? } #{ 'sortable' if policy(reward).update? } #{ 'soon' if reward.soon? }"]
    header.title
      = t('.reward_title', minimum: reward.display_minimum).html_safe
      - if policy(reward).update?
        = link_to edit_project_reward_path(parent, reward), data: { element: ".edit-#{reward.id}-reward-form", path: edit_project_reward_path(parent, reward) }, class: 'edit' do
          i.icon-et-pencil

    div[class="edit-#{reward.id}-reward-form"]
      .loading.hide
        = image_tag 'loading.gif'
      .form-content.hide

    - if reward.maximum_contributions
      - if reward.sold_out?
        .sold-out
          .wrapper
            h4
              i.icon-et-cancel-squared
              br/
              = t('.sold_out')
      .maximum-contributions
        i.icon-et-alert
        = reward.display_remaining

        - in_time_to_confirm = reward.contributions.with_state('waiting_confirmation').count
        - if in_time_to_confirm > 0
          .pending = t('.contributions_to_confirm', count: in_time_to_confirm)

    .title = reward.title
    .description = reward.display_description

    - if reward.days_to_delivery.present?
      .days-to-delivery
        p = "#{t('.reward_deliver_time', prevision: reward.display_deliver_prevision)}".html_safe

- if policy(parent).update?

  .reward.new-reward-form
    .loading.hide
      = image_tag 'loading.gif'
    .form-content.hide

  .reward.add-reward
    = link_to new_project_reward_path(parent), data: { element: '.new-reward-form', path: new_project_reward_path(parent) } do
      i.icon-et-plus
      br/
      = t('.add')
